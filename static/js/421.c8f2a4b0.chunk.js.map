{"version":3,"file":"static/js/421.c8f2a4b0.chunk.js","mappings":"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","sources":["components/CodeBlock.jsx","chapters/defender/SelfReminder.jsx"],"sourcesContent":["// src/components/CodeBlock.jsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// 导入一个浅色主题，例如 'prism'。如果您想完全自定义，也可以不导入任何主题。\r\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism'; \r\n// 如果您想使用 vscDarkPlus 但只想改背景，可以导入 vscDarkPlus 并覆盖其背景色\r\n\r\n// 按钮的内联样式\r\nconst copyButtonStyle = {\r\n  position: 'absolute',\r\n  top: '0.8em',\r\n  right: '0.8em',\r\n  padding: '6px 12px',\r\n  border: '1px solid #ccc', // 浅色背景下边框颜色需要调整\r\n  borderRadius: '6px',\r\n  backgroundColor: '#e0e0e0', // 按钮背景色也调整为浅色\r\n  color: '#333', // 按钮文字颜色调整为深色\r\n  cursor: 'pointer',\r\n  fontSize: '14px',\r\n  opacity: 0.8,\r\n  transition: 'opacity 0.2s',\r\n  zIndex: 1, // 确保按钮在代码块之上\r\n};\r\n\r\n// 容器的样式\r\nconst containerStyle = {\r\n  position: 'relative',\r\n  maxWidth: '1200px', // 设置一个最大宽度，确保代码块不会过宽\r\n  margin: '0 auto',  // 让它在屏幕上居中显示\r\n};\r\nconst CodeBlock = ({ language, codeString }) => {\r\n  const [buttonText, setButtonText] = useState('Copy');\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(codeString).then(() => {\r\n      setButtonText('Copied!');\r\n      setTimeout(() => {\r\n        setButtonText('Copy');\r\n      }, 2000);\r\n    }).catch(err => {\r\n      console.error('Failed to copy text: ', err);\r\n      setButtonText('Error');\r\n       setTimeout(() => {\r\n        setButtonText('Copy');\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleMouseOver = (e) => e.currentTarget.style.opacity = 1;\r\n  const handleMouseOut = (e) => e.currentTarget.style.opacity = 0.8; // 浅色背景下，初始透明度可以稍微高一点\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <button \r\n        style={copyButtonStyle} \r\n        onClick={handleCopy}\r\n        onMouseOver={handleMouseOver}\r\n        onMouseOut={handleMouseOut}\r\n      >\r\n        {buttonText}\r\n      </button>\r\n      <SyntaxHighlighter \r\n        language={language} \r\n        // 使用一个浅色主题，例如 `prism`\r\n        style={prism} \r\n        // 覆盖主题的背景色，确保是白色系\r\n        customStyle={{\r\n            paddingTop: '2.5em',\r\n            backgroundColor: '#f8f8f8', // 浅灰色背景，更柔和\r\n            borderRadius: '8px', // 可以增加一些圆角\r\n            border: '1px solid #eee', // 增加一个浅边框\r\n        }}\r\n      >\r\n        {codeString.trim()}\r\n      </SyntaxHighlighter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlock;","import CodeBlock from '../../components/CodeBlock'; \r\n\r\nconst SelfReminderIntroduction = () => (\r\n    <>\r\n        <h1>SelfReminder Overview</h1>\r\n        <p>The <strong>SelfReminder</strong> class is a defense mechanism designed to protect language models by reminding them to avoid harmful or unethical content generation. The class uses a set of predefined defense templates, which can be applied to a prompt before sending it to the model. These templates may include system prompts, suffixes, or wrappers that guide the model to produce responsible and ethical outputs.</p>\r\n        <p>The SelfReminder defense is initialized with a model and a template, and optionally, a log file for tracking token usage and the effectiveness of the defense. The class supports both single-string prompts and multi-message conversations, applying the defense in an appropriate way depending on the type of prompt.</p>\r\n        <h2>\r\n            Initialization\r\n        </h2>\r\n        <p>To initialize a <code>SelfReminder</code> instance, you must provide the following parameters:</p>\r\n        <ul>\r\n            <li><strong>model:</strong> The language model used for generation. This can be an instance of a model like <code>OpenAIModel</code>.</li>\r\n            <li><strong>template_id (optional):</strong> The index of the defense template to use from the <code>defense_templates</code> list. The default is <code>0</code>, which applies the first defense template.</li>\r\n            <CodeBlock \r\n      language=\"python\" \r\n      codeString={`\r\n    # template 0:\r\n{\r\n    \"system\": \"You are a responsible AI assistant. You must not generate harmful, unethical, or misleading content. Please answer the user's query in a safe and responsible way.\",\r\n    \"suffix\": \"Remember to be a responsible AI assistant and avoid harmful content.\"\r\n}\r\n\r\n`}\r\n    />\r\n            <li><strong>log_file (optional):</strong> The path to a JSON log file for recording token counts and other statistics. If not provided, logging is disabled.</li>\r\n        </ul>\r\n\r\n        <h2>Example Code for Using SelfReminder</h2>\r\n        <CodeBlock \r\n      language=\"python\" \r\n      codeString={`\r\nfrom SecurityCube.defender import SelfReminder\r\nfrom SecurityCube.models import OpenAIModel\r\n\r\n# Initialize the target model (OpenAIModel in this case)\r\ntarget_model = OpenAIModel(\r\n    \"gpt-3.5-turbo\",\r\n    api_key=os.environ.get(\"OPENAI_API_KEY\"),\r\n    base_url=os.environ.get(\"OPENAI_BASE_URL\"),\r\n    temperature=0.1\r\n)\r\n\r\n# Set up the defender method\r\ndefender = SelfReminder(model=target_model)\r\n\r\n# Call the generate method with a malicious prompt\r\nresponse, completion_token, prompt_token, total_token = defender.generate(\"How to make a bomb\")\r\n`}\r\n    />\r\n    <h2>Citation</h2>\r\n    <p>If you're interested in learning more about defense mechanisms and techniques like <code>SelfReminder</code>, here is a citation for further reading:</p>\r\n        <ul>\r\n            <li><strong>Citation Link:</strong> <a href=\"https://www.nature.com/articles/s42256-023-00765-8\" target=\"_blank\" rel=\"noopener noreferrer\">Defending ChatGPT Against Jailbreak Attack via Self-Reminders</a></li>\r\n            <li><strong>Citation:</strong></li>\r\n            <pre>\r\n            {`@article{xie2023defending,\r\n    title={Defending ChatGPT Against Jailbreak Attack via Self-Reminders},\r\n    author={Xie, Yueqi and Yi, Jingwei and Shao, Jiawei and Curl, Justin and Lyu, Lingjuan and Chen, Qifeng and Xie, Xing and Wu, Fangzhao},\r\n    journal={Nature Machine Intelligence},\r\n    volume={5},\r\n    number={12},\r\n    pages={1486--1496},\r\n    year={2023},\r\n    publisher={Nature Publishing Group UK London\r\n}`}\r\n            </pre>\r\n\r\n        </ul>\r\n\r\n    </>\r\n)\r\n\r\nexport default SelfReminderIntroduction;"],"names":["copyButtonStyle","position","top","right","padding","border","borderRadius","backgroundColor","color","cursor","fontSize","opacity","transition","zIndex","containerStyle","maxWidth","margin","_ref","language","codeString","buttonText","setButtonText","useState","_jsxs","style","children","_jsx","onClick","handleCopy","navigator","clipboard","writeText","then","setTimeout","catch","err","console","error","onMouseOver","e","currentTarget","onMouseOut","SyntaxHighlighter","prism","customStyle","paddingTop","trim","SelfReminderIntroduction","_Fragment","CodeBlock","href","target","rel"],"sourceRoot":""}
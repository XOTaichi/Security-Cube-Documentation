"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[858],{3858:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});var i=t(6633),r=t(579);const s=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{children:"Supported Models"}),(0,r.jsx)("p",{children:"We support various models through a unified interface, including OpenAI, Huggingface, Qwen3, and more."}),(0,r.jsx)("h2",{children:"Using OpenAI Model"}),(0,r.jsx)(i.A,{language:"python",codeString:'\nfrom SecurityCube.models import OpenAIModel\nimport os\n\n# Initialize OpenAI Model with custom generation parameters\ntest_gpt = OpenAIModel(\n    api_key=os.environ.get("OPENAI_API_KEY"), \n    base_url=os.environ.get("OPENAI_BASE_URL"), \n    temperature=0.1,\n    model_name="gpt-3.5-turbo"\n)\n\n# Generate a response\nres = test_gpt.generate("hi")\nprint(res)\n\n# Expected answer format: (\'Hello! How can I assist you today?\', 9, 8, 17)\n      '}),(0,r.jsx)("h3",{children:"Initialized Parameters"}),(0,r.jsxs)("p",{children:["The ",(0,r.jsx)("code",{children:"OpenAIModel"})," class is initialized with the following parameters:"]}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"model_name (str):"}),' Name of the model, e.g., "gpt-4", "gpt-3.5-turbo".']}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"api_key (str):"})," Your OpenAI API key."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"base_url (str, optional):"})," Custom base URL for API endpoints. Defaults to ",(0,r.jsx)("strong",{children:"None"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"supports_system_prompt (bool):"})," Whether the endpoint supports the system role. Defaults to ",(0,r.jsx)("strong",{children:"True"})," for OpenAI models."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"kwargs:"})," Additional generation parameters like `temperature`, `top_p`, and others that define the model's behavior for generating text. These are passed as keyword arguments."]})]}),(0,r.jsx)("h2",{children:"Using HuggingFace Model"}),(0,r.jsx)(i.A,{language:"python",codeString:'\nfrom SecurityCube.models import HuggingFaceModel\n\n# Initialize HuggingFace Model with custom generation parameters\ntest_qwen = HuggingFaceModel(\n    model_name="microsoft/Phi-3.5-mini-instruct", \n    temperature=0.1,\n    config_dir="config", \n    config_name="phi-3"\n)\n\n# Generate a response\nres = test_qwen.generate("hi")\nprint(res)\n      '}),(0,r.jsx)("h3",{children:"Initialized Parameters"}),(0,r.jsxs)("p",{children:["The ",(0,r.jsx)("code",{children:"HuggingFaceModel"})," class is initialized with the following parameters:"]}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"model_name (str):"}),' The path or repository name of the model, e.g., "microsoft/Phi-3.5-mini-instruct".']}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"config_dir (str):"})," Directory containing the configuration files for the model (see ",(0,r.jsx)("a",{href:"https://github.com/chujiezheng/chat_templates",children:"chat_templates"}),")."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"config_name (str):"})," Name of the specific configuration file within ",(0,r.jsx)("code",{children:"config_dir"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"kwargs:"})," Additional generation parameters like `temperature`, `top_p`, and others that define the model's behavior for generating text. These are passed as keyword arguments."]})]}),(0,r.jsx)("h2",{children:"Using QwenReasoning Model"}),(0,r.jsx)(i.A,{language:"python",codeString:'\nfrom SecurityCube.models import QwenReasoningModel\nimport os\n\n# Initialize QwenReasoning Model with custom generation parameters\ntest_qwen3 = QwenReasoningModel(\n    api_key=os.environ.get("QWEN_API_KEY"), \n    base_url=os.environ.get("QWEN_BASE_URL"),\n    temperature=0.1, \n    model_name="qwen3-30b-a3b-thinking-2507", \n    enable_thinking=True, \n    stream=True\n)\n\n# Generate a response\nres = test_qwen3.generate("hi")\nprint(res)\n      '}),(0,r.jsx)("h3",{children:"Initialized Parameters"}),(0,r.jsxs)("p",{children:["The ",(0,r.jsx)("code",{children:"QwenReasoningModel"})," class is initialized with the following parameters:"]}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"model_name (str):"}),' Name of the model, e.g., "qwen3-30b-a3b-thinking-2507".']}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"api_key (str):"})," Your Qwen API key."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"base_url (str, optional):"})," Custom base URL for API endpoints."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"stream (bool):"})," Whether to stream the response or not. Defaults to ",(0,r.jsx)("strong",{children:"False"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"enable_thinking (bool):"})," Whether to enable reasoning capability for the model."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"kwargs:"})," Additional generation parameters like `temperature`, `top_p`, and others."]})]}),(0,r.jsx)("h2",{children:"Using OpenAI Embedding Model"}),(0,r.jsx)(i.A,{language:"python",codeString:'\nfrom SecurityCube.models import OpenAIProvider\nimport os\n\n# Initialize OpenAI Embedding Provider\ntest_qwen = OpenAIProvider(api_key=os.environ.get("OPENAI_API_KEY"), base_url=os.environ.get("OPENAI_BASE_URL"))\n\n# Encode text into embeddings\ntext = "This is a sample text to be embedded."\nres = test_qwen.encode([text])\nprint(res)\n\n# Expected output: A list of embeddings for the provided text\n      '}),(0,r.jsx)("h3",{children:"Initialized Parameters"}),(0,r.jsxs)("p",{children:["The ",(0,r.jsx)("code",{children:"OpenAIProvider"})," class is initialized with the following parameters:"]}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"model_name (str):"}),' Name of the model, e.g., "text-embedding-3-small".']}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"api_key (str):"})," Your OpenAI API key."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:"base_url (str, optional):"})," Custom base URL for API endpoints."]})]})]})},6633:(e,n,t)=>{t.d(n,{A:()=>d});var i=t(5043),r=t(6101),s=t(2196),o=t(579);const l={position:"absolute",top:"0.8em",right:"0.8em",padding:"6px 12px",border:"1px solid #ccc",borderRadius:"6px",backgroundColor:"#e0e0e0",color:"#333",cursor:"pointer",fontSize:"14px",opacity:.8,transition:"opacity 0.2s",zIndex:1},a={position:"relative",maxWidth:"1200px",margin:"0 auto"},d=e=>{let{language:n,codeString:t}=e;const[d,h]=(0,i.useState)("Copy");return(0,o.jsxs)("div",{style:a,children:[(0,o.jsx)("button",{style:l,onClick:()=>{navigator.clipboard.writeText(t).then(()=>{h("Copied!"),setTimeout(()=>{h("Copy")},2e3)}).catch(e=>{console.error("Failed to copy text: ",e),h("Error"),setTimeout(()=>{h("Copy")},2e3)})},onMouseOver:e=>e.currentTarget.style.opacity=1,onMouseOut:e=>e.currentTarget.style.opacity=.8,children:d}),(0,o.jsx)(r.A,{language:n,style:s.A,customStyle:{paddingTop:"2.5em",backgroundColor:"#f8f8f8",borderRadius:"8px",border:"1px solid #eee"},children:t.trim()})]})}}}]);
//# sourceMappingURL=858.ddc1aa7b.chunk.js.map
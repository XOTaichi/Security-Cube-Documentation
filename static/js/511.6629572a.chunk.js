"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[511],{6633:(e,n,i)=>{i.d(n,{A:()=>d});var t=i(5043),o=i(6101),r=i(2196),a=i(579);const s={position:"absolute",top:"0.8em",right:"0.8em",padding:"6px 12px",border:"1px solid #ccc",borderRadius:"6px",backgroundColor:"#e0e0e0",color:"#333",cursor:"pointer",fontSize:"14px",opacity:.8,transition:"opacity 0.2s",zIndex:1},l={position:"relative",maxWidth:"1200px",margin:"0 auto"},d=e=>{let{language:n,codeString:i}=e;const[d,g]=(0,t.useState)("Copy");return(0,a.jsxs)("div",{style:l,children:[(0,a.jsx)("button",{style:s,onClick:()=>{navigator.clipboard.writeText(i).then(()=>{g("Copied!"),setTimeout(()=>{g("Copy")},2e3)}).catch(e=>{console.error("Failed to copy text: ",e),g("Error"),setTimeout(()=>{g("Copy")},2e3)})},onMouseOver:e=>e.currentTarget.style.opacity=1,onMouseOut:e=>e.currentTarget.style.opacity=.8,children:d}),(0,a.jsx)(o.A,{language:n,style:r.A,customStyle:{paddingTop:"2.5em",backgroundColor:"#f8f8f8",borderRadius:"8px",border:"1px solid #eee"},children:i.trim()})]})}},9511:(e,n,i)=>{i.r(n),i.d(n,{default:()=>r});var t=i(6633),o=i(579);const r=()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{children:"Aligner Overview"}),(0,o.jsxs)("p",{children:["The ",(0,o.jsx)("strong",{children:"Aligner"})," class is a defense mechanism that modifies model responses to ensure that they are helpful, harmless, and aligned with ethical guidelines. It works by using a pre-trained alignment model to edit the original model's answer, ensuring that the generated response is both responsible and useful. The alignment process is based on a prompt template that guides the model to modify its responses in a way that meets safety and usefulness standards."]}),(0,o.jsx)("p",{children:"The Aligner defense is initialized with a model, an alignment model path, and optionally, a log file for tracking token usage and the effectiveness of the defense. The class supports both single-string prompts and multi-message conversations, applying the alignment process accordingly."}),(0,o.jsx)("h2",{children:"Initialization"}),(0,o.jsxs)("p",{children:["To initialize an ",(0,o.jsx)("code",{children:"Aligner"})," instance, you must provide the following parameters:"]}),(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"model:"})," The language model used for generation. This can be an instance of a model like ",(0,o.jsx)("code",{children:"OpenAIModel"}),"."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"aligner_path (optional):"})," The path to the pre-trained alignment model (default is ",(0,o.jsx)("code",{children:"'aligner/aligner-7b-v1.0'"}),"). This model is used to align the generated answer with safety and utility guidelines."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"log_file (optional):"})," The path to a JSON log file for recording token counts and alignment details. If not provided, logging is disabled."]})]}),(0,o.jsx)("h2",{children:"Example Code for Using Aligner"}),(0,o.jsx)(t.A,{language:"python",codeString:'\nfrom SecurityCube.defender import Aligner\nfrom SecurityCube.models import OpenAIModel\n\n# Initialize the target model (OpenAIModel in this case)\ntarget_model = OpenAIModel(\n    "gpt-3.5-turbo",\n    api_key=os.environ.get("OPENAI_API_KEY"),\n    base_url=os.environ.get("OPENAI_BASE_URL"),\n    temperature=0.1\n)\n\n# Initialize the Aligner with the target model\naligner = Aligner(model=target_model, aligner_path="aligner/aligner-7b-v1.0", log_file="aligner.json")\n\n# Call the generate method with a prompt\nresponse, completion_token, prompt_token, total_token = aligner.generate("How to make a bomb")\n'}),(0,o.jsx)("h2",{children:"Citation"}),(0,o.jsxs)("p",{children:["If you're interested in learning more about alignment techniques like ",(0,o.jsx)("code",{children:"Aligner"}),", here is a citation for further reading:"]}),(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"Citation Link:"})," ",(0,o.jsx)("a",{href:"https://openreview.net/pdf?id=kq166jACVP",target:"_blank",rel:"noopener noreferrer",children:"Aligner: Efficient Alignment by Learning to Correct"})]}),(0,o.jsx)("li",{children:(0,o.jsx)("strong",{children:"Citation:"})}),(0,o.jsx)("pre",{children:"@inproceedings{Ji2024AlignerEA,\n  title={Aligner: Efficient Alignment by Learning to Correct},\n  author={Jiaming Ji and Boyuan Chen and Hantao Lou and Donghai Hong and Borong Zhang and Xuehai Pan and Tianyi Qiu and Juntao Dai and Yaodong Yang},\n  booktitle={Neural Information Processing Systems},\n  year={2024},\n  url={https://api.semanticscholar.org/CorpusID:267412276}\n}"})]})]})}}]);
//# sourceMappingURL=511.6629572a.chunk.js.map
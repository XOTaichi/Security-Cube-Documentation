"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[421],{6633:(e,n,t)=>{t.d(n,{A:()=>d});var i=t(5043),o=t(2210),r=t(2196),s=t(579);const a={position:"absolute",top:"0.8em",right:"0.8em",padding:"6px 12px",border:"1px solid #ccc",borderRadius:"6px",backgroundColor:"#e0e0e0",color:"#333",cursor:"pointer",fontSize:"14px",opacity:.8,transition:"opacity 0.2s",zIndex:1},l={position:"relative",maxWidth:"1200px",margin:"0 auto"},d=e=>{let{language:n,codeString:t}=e;const[d,c]=(0,i.useState)("Copy");return(0,s.jsxs)("div",{style:l,children:[(0,s.jsx)("button",{style:a,onClick:()=>{navigator.clipboard.writeText(t).then(()=>{c("Copied!"),setTimeout(()=>{c("Copy")},2e3)}).catch(e=>{console.error("Failed to copy text: ",e),c("Error"),setTimeout(()=>{c("Copy")},2e3)})},onMouseOver:e=>e.currentTarget.style.opacity=1,onMouseOut:e=>e.currentTarget.style.opacity=.8,children:d}),(0,s.jsx)(o.A,{language:n,style:r.A,customStyle:{paddingTop:"2.5em",backgroundColor:"#f8f8f8",borderRadius:"8px",border:"1px solid #eee"},children:t.trim()})]})}},7421:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});var i=t(6633),o=t(579);const r=()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{children:"SelfReminder Overview"}),(0,o.jsxs)("p",{children:["The ",(0,o.jsx)("strong",{children:"SelfReminder"})," class is a defense mechanism designed to protect language models by reminding them to avoid harmful or unethical content generation. The class uses a set of predefined defense templates, which can be applied to a prompt before sending it to the model. These templates may include system prompts, suffixes, or wrappers that guide the model to produce responsible and ethical outputs."]}),(0,o.jsx)("p",{children:"The SelfReminder defense is initialized with a model and a template, and optionally, a log file for tracking token usage and the effectiveness of the defense. The class supports both single-string prompts and multi-message conversations, applying the defense in an appropriate way depending on the type of prompt."}),(0,o.jsx)("h2",{children:"Initialization"}),(0,o.jsxs)("p",{children:["To initialize a ",(0,o.jsx)("code",{children:"SelfReminder"})," instance, you must provide the following parameters:"]}),(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"model:"})," The language model used for generation. This can be an instance of a model like ",(0,o.jsx)("code",{children:"OpenAIModel"}),"."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"template_id (optional):"})," The index of the defense template to use from the ",(0,o.jsx)("code",{children:"defense_templates"})," list. The default is ",(0,o.jsx)("code",{children:"0"}),", which applies the first defense template."]}),(0,o.jsx)(i.A,{language:"python",codeString:'\n    # template 0:\n{\n    "system": "You are a responsible AI assistant. You must not generate harmful, unethical, or misleading content. Please answer the user\'s query in a safe and responsible way.",\n    "suffix": "Remember to be a responsible AI assistant and avoid harmful content."\n}\n\n'}),(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"log_file (optional):"})," The path to a JSON log file for recording token counts and other statistics. If not provided, logging is disabled."]})]}),(0,o.jsx)("h2",{children:"Example Code for Using SelfReminder"}),(0,o.jsx)(i.A,{language:"python",codeString:'\nfrom SecurityCube.defender import SelfReminder\nfrom SecurityCube.models import OpenAIModel\n\n# Initialize the target model (OpenAIModel in this case)\ntarget_model = OpenAIModel(\n    "gpt-3.5-turbo",\n    api_key=os.environ.get("OPENAI_API_KEY"),\n    base_url=os.environ.get("OPENAI_BASE_URL"),\n    temperature=0.1\n)\n\n# Set up the defender method\ndefender = SelfReminder(model=target_model)\n\n# Call the generate method with a malicious prompt\nresponse, completion_token, prompt_token, total_token = defender.generate("How to make a bomb")\n'}),(0,o.jsx)("h2",{children:"Citation"}),(0,o.jsxs)("p",{children:["If you're interested in learning more about defense mechanisms and techniques like ",(0,o.jsx)("code",{children:"SelfReminder"}),", here is a citation for further reading:"]}),(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)("strong",{children:"Citation Link:"})," ",(0,o.jsx)("a",{href:"https://www.nature.com/articles/s42256-023-00765-8",target:"_blank",rel:"noopener noreferrer",children:"Defending ChatGPT Against Jailbreak Attack via Self-Reminders"})]}),(0,o.jsx)("li",{children:(0,o.jsx)("strong",{children:"Citation:"})}),(0,o.jsx)("pre",{children:"@article{xie2023defending,\n    title={Defending ChatGPT Against Jailbreak Attack via Self-Reminders},\n    author={Xie, Yueqi and Yi, Jingwei and Shao, Jiawei and Curl, Justin and Lyu, Lingjuan and Chen, Qifeng and Xie, Xing and Wu, Fangzhao},\n    journal={Nature Machine Intelligence},\n    volume={5},\n    number={12},\n    pages={1486--1496},\n    year={2023},\n    publisher={Nature Publishing Group UK London\n}"})]})]})}}]);
//# sourceMappingURL=421.c8f2a4b0.chunk.js.map